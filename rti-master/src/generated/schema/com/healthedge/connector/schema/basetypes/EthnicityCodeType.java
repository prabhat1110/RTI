//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.4 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2017.11.28 at 09:19:38 AM EST 
//


package com.healthedge.connector.schema.basetypes;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for EthnicityCodeType.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="EthnicityCodeType">
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *     &lt;enumeration value="Not Provided"/>
 *     &lt;enumeration value="Not Applicable"/>
 *     &lt;enumeration value="Asian or Pacific Islander"/>
 *     &lt;enumeration value="Black"/>
 *     &lt;enumeration value="Caucasian"/>
 *     &lt;enumeration value="Subcontinent Asian American"/>
 *     &lt;enumeration value="Other Race or Ethnicity"/>
 *     &lt;enumeration value="Asian Pacific American"/>
 *     &lt;enumeration value="Native American"/>
 *     &lt;enumeration value="Hispanic"/>
 *     &lt;enumeration value="American Indian or Alaskan Native"/>
 *     &lt;enumeration value="Native Hawaiian"/>
 *     &lt;enumeration value="Black (Non-Hispanic)"/>
 *     &lt;enumeration value="White (Non-Hispanic)"/>
 *     &lt;enumeration value="Pacific Islander"/>
 *     &lt;enumeration value="Mutually Defined"/>
 *   &lt;/restriction>
 * &lt;/simpleType>
 * </pre>
 * 
 */
@XmlType(name = "EthnicityCodeType")
@XmlEnum
public enum EthnicityCodeType {

    @XmlEnumValue("Not Provided")
    NOT_PROVIDED("Not Provided"),
    @XmlEnumValue("Not Applicable")
    NOT_APPLICABLE("Not Applicable"),
    @XmlEnumValue("Asian or Pacific Islander")
    ASIAN_OR_PACIFIC_ISLANDER("Asian or Pacific Islander"),
    @XmlEnumValue("Black")
    BLACK("Black"),
    @XmlEnumValue("Caucasian")
    CAUCASIAN("Caucasian"),
    @XmlEnumValue("Subcontinent Asian American")
    SUBCONTINENT_ASIAN_AMERICAN("Subcontinent Asian American"),
    @XmlEnumValue("Other Race or Ethnicity")
    OTHER_RACE_OR_ETHNICITY("Other Race or Ethnicity"),
    @XmlEnumValue("Asian Pacific American")
    ASIAN_PACIFIC_AMERICAN("Asian Pacific American"),
    @XmlEnumValue("Native American")
    NATIVE_AMERICAN("Native American"),
    @XmlEnumValue("Hispanic")
    HISPANIC("Hispanic"),
    @XmlEnumValue("American Indian or Alaskan Native")
    AMERICAN_INDIAN_OR_ALASKAN_NATIVE("American Indian or Alaskan Native"),
    @XmlEnumValue("Native Hawaiian")
    NATIVE_HAWAIIAN("Native Hawaiian"),
    @XmlEnumValue("Black (Non-Hispanic)")
    BLACK_NON_HISPANIC("Black (Non-Hispanic)"),
    @XmlEnumValue("White (Non-Hispanic)")
    WHITE_NON_HISPANIC("White (Non-Hispanic)"),
    @XmlEnumValue("Pacific Islander")
    PACIFIC_ISLANDER("Pacific Islander"),
    @XmlEnumValue("Mutually Defined")
    MUTUALLY_DEFINED("Mutually Defined");
    private final String value;

    EthnicityCodeType(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static EthnicityCodeType fromValue(String v) {
        for (EthnicityCodeType c: EthnicityCodeType.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
