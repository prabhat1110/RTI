//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.4 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2017.11.28 at 09:19:38 AM EST 
//


package com.healthedge.connector.schema.basetypes;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for DisabilityTypeDomainType.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="DisabilityTypeDomainType">
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *     &lt;enumeration value="Awaiting Verification"/>
 *     &lt;enumeration value="No Verification Received"/>
 *     &lt;enumeration value="Verification Under Review"/>
 *     &lt;enumeration value="Indefinitely Approved"/>
 *     &lt;enumeration value="Temporarily Approved"/>
 *     &lt;enumeration value="Awaiting Re-verification"/>
 *     &lt;enumeration value="Denied"/>
 *   &lt;/restriction>
 * &lt;/simpleType>
 * </pre>
 * 
 */
@XmlType(name = "DisabilityTypeDomainType")
@XmlEnum
public enum DisabilityTypeDomainType {

    @XmlEnumValue("Awaiting Verification")
    AWAITING_VERIFICATION("Awaiting Verification"),
    @XmlEnumValue("No Verification Received")
    NO_VERIFICATION_RECEIVED("No Verification Received"),
    @XmlEnumValue("Verification Under Review")
    VERIFICATION_UNDER_REVIEW("Verification Under Review"),
    @XmlEnumValue("Indefinitely Approved")
    INDEFINITELY_APPROVED("Indefinitely Approved"),
    @XmlEnumValue("Temporarily Approved")
    TEMPORARILY_APPROVED("Temporarily Approved"),
    @XmlEnumValue("Awaiting Re-verification")
    AWAITING_RE_VERIFICATION("Awaiting Re-verification"),
    @XmlEnumValue("Denied")
    DENIED("Denied");
    private final String value;

    DisabilityTypeDomainType(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static DisabilityTypeDomainType fromValue(String v) {
        for (DisabilityTypeDomainType c: DisabilityTypeDomainType.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
