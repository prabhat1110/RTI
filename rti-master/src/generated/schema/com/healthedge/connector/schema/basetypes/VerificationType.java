//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.4 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2017.11.28 at 09:19:38 AM EST 
//


package com.healthedge.connector.schema.basetypes;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for VerificationType.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="VerificationType">
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *     &lt;enumeration value="Student Verification"/>
 *     &lt;enumeration value="Disabled Dependent"/>
 *     &lt;enumeration value="Dependent Attestation"/>
 *     &lt;enumeration value="Work Related Death"/>
 *     &lt;enumeration value="Retired State Police Affirmation"/>
 *     &lt;enumeration value="MSP Waiver"/>
 *     &lt;enumeration value="SSN Waiver"/>
 *   &lt;/restriction>
 * &lt;/simpleType>
 * </pre>
 * 
 */
@XmlType(name = "VerificationType")
@XmlEnum
public enum VerificationType {

    @XmlEnumValue("Student Verification")
    STUDENT_VERIFICATION("Student Verification"),
    @XmlEnumValue("Disabled Dependent")
    DISABLED_DEPENDENT("Disabled Dependent"),
    @XmlEnumValue("Dependent Attestation")
    DEPENDENT_ATTESTATION("Dependent Attestation"),
    @XmlEnumValue("Work Related Death")
    WORK_RELATED_DEATH("Work Related Death"),
    @XmlEnumValue("Retired State Police Affirmation")
    RETIRED_STATE_POLICE_AFFIRMATION("Retired State Police Affirmation"),
    @XmlEnumValue("MSP Waiver")
    MSP_WAIVER("MSP Waiver"),
    @XmlEnumValue("SSN Waiver")
    SSN_WAIVER("SSN Waiver");
    private final String value;

    VerificationType(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static VerificationType fromValue(String v) {
        for (VerificationType c: VerificationType.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
