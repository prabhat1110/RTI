buildscript {
	ext {
		springBootVersion = '1.5.8.RELEASE'
	}
	repositories {
		mavenCentral()
		jcenter()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
		classpath 'com.github.jacobono:gradle-jaxb-plugin:1.3.5'
	}
}

plugins {
	id "org.sonarqube" version "2.6"
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'maven-publish'
apply plugin: 'org.springframework.boot'
apply plugin: 'com.github.jacobono.jaxb'

group = 'com.healthedge'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8
targetCompatibility = 1.8

jar {
	baseName = 'rti'
	version = '0.0.1-SNAPSHOT'
}

ext {
	buildNumber = System.getenv("BUILD_NUMBER") ?: "dev"
	buildNumber = buildNumber.trim()
}

publishing {
	publications {
		maven(MavenPublication) {
			groupId 'com.healthege.rti'
			version "1.0.0-$buildNumber"
			artifactId 'rti'
			from components.java
		}
	}
}

sonarqube {
	properties {
		property "sonar.sources", "src/main"
		property "sonar.tests", "src/test"
	}
}

repositories {
	mavenCentral()
	mavenLocal()	
	jcenter()
}

dependencies {

	jaxb group: 'com.sun.xml.bind', name: 'jaxb-xjc', version: '2.2.4-1'
	compile('org.springframework.boot:spring-boot-starter-actuator')
	compile('org.springframework.boot:spring-boot-starter-batch')
	compile('org.springframework.boot:spring-boot-starter-web')
	compile('org.springframework.boot:spring-boot-starter-data-jpa')
	compile('org.springframework.boot:spring-boot-starter-security')
	compile("io.jsonwebtoken:jjwt:0.7.0")
	compile("mysql:mysql-connector-java:5.1.6")
	compile group: 'org.springframework.ws', name: 'spring-ws', version: '3.0.0.RELEASE', ext: 'pom'
	compile group: 'org.springframework.security', name: 'spring-security-core', version: '4.2.3.RELEASE'
	compile group: 'joda-time', name: 'joda-time', version: '2.9.9'
	compile group: 'commons-io', name: 'commons-io', version: '2.4'
	compile group: 'io.springfox', name: 'springfox-swagger2', version: '2.7.0'
	compile group: 'io.springfox', name: 'springfox-swagger-ui', version: '2.7.0'
	compile group: 'org.apache.commons', name: 'commons-lang3', version: '3.1'
	testCompile('org.springframework.boot:spring-boot-starter-test')
	testCompile('org.springframework.batch:spring-batch-test')
	testCompile group: 'org.mockito', name: 'mockito-core', version: '2.12.0'
}

configurations {
	jaxb
}

task jaxb () {
	description 'Converts xsds to classes'
	def jaxbTargetDir = file("src/generated/schema")

	doLast {
		jaxbTargetDir.mkdirs()

		ant.taskdef(name: 'xjc', classname: 'com.sun.tools.xjc.XJCTask', classpath: configurations.jaxb.asPath)
		ant.jaxbTargetDir = jaxbTargetDir

		ant.xjc(destdir: '${jaxbTargetDir}', schema:'src/main/resources/schema/enrollment-sparse.xsd', extension:'true')
	}
}

sourceSets {
	main {
		java {
			srcDir 'src/generated/schema'
		}
	}
}
